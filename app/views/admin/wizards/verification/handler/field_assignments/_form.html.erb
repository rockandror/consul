<%= form_for [:admin, :wizards, @field_assignment],
             url: @field_assignment.persisted? ? admin_wizards_verification_handler_field_assignment_path(@field_assignment.handler, @field_assignment.id) : admin_wizards_verification_handler_field_assignments_path(@field_assignment.handler)  do |f| %>

  <%= render "shared/errors", resource: @field_assignment %>

  <div class="row">
    <div class="small-12 column">
      <%= f.select :verification_field_id,
                    Verification::Field.all.collect{|field| [field.name, field.id]} %>
    </div>
  </div>

  <% if remote_census_handler?(@handler) %>
    <div class="row">
      <div class="small-12 column">
        <p>If the field you are defining needs to be sent to the Remote Census, fill in the value with the path of this field in the request. For example if the request structure is {'request': {'sample_field': ''}}, if we are defining the sample_field, we should fill this field with: "request.sample_field".</p>
        <%= f.text_field :request_path %>
      </div>
    </div>
    <div class="row">
      <div class="small-12 column">
        <p>If the field you are defining needs to be validated with the remote census response, fill in the value with the path of this field in the response and it will be validated that the value of the field entered by the user is equal to the one sent in the response. For example if the response structure is {response: {sample_field: "sample value"}}, we should fill this field with: "response.sample_field".</p>
        <%= f.text_field :response_path %>
      </div>
    </div>
  <% end %>

  <div class="row">
    <div class="small-12 column">
      <%= f.submit class: "button success expanded margin-top",
                   value: t("admin.wizards.verification.handler.field_assignments.form.submit_button") %>
    </div>
  </div>
<% end %>
